<body class="min-h-screen bg-white flex flex-col items-center p-6">
    <!-- Title -->
    <h1 class="text-3xl font-bold mt-4 mb-6">Daftar Akun</h1> 

    <!-- Grid Layout -->
    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Folder Item 1 -->
        {{#each akunData}}
            <div class="group relative flex flex-col bg-white border shadow-sm rounded-xl hover:shadow-md transition dark:bg-slate-900 dark:border-gray-800 overflow-visible">
            <!-- Dropdown Toggle -->
            <button class="absolute top-2 right-2 p-1.5 rounded-lg hover:bg-gray-100 z-20" onclick="event.stopPropagation(); toggleDropdown('dropdown-521811')">
                <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                </svg>
            </button>
            <!-- Dropdown Menu -->
            <div id="dropdown-521811" class="hidden absolute top-10 right-2 z-30 bg-white rounded-lg shadow-lg border border-gray-200 py-2 w-36">
                <a href="editakun/{{this.akun_id}}" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" onclick="event.stopPropagation()">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
                    </svg>
                    Edit
                </a>
                <button class="flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-gray-100 delete-btn" onclick="event.stopPropagation(); showDeleteModal('521811')">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                    Hapus
                </button>
            </div>
            <!-- Clickable Link Wrapper -->
            <a href="daftar/{{this.akun_id}}" class="flex-1 p-4 md:p-5">
                <div class="flex items-center gap-x-4">
                    <div class="bg-yellow-300 rounded-lg p-2">
                        <svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"></path>
                        </svg>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold text-gray-800 dark:text-white">{{this.nama_akun}}</h3>
                        <p class="text-sm text-gray-500">{{this.jumlah_kwitansi}}</p>
                    </div>
                </div>
            </a>
        </div>
        {{/each}}
        <!-- Add more folder items as needed -->
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="delete-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50">
        <div class="relative mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100">
                    <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                    </svg>
                </div>
                <h3 class="text-lg leading-6 font-medium text-gray-900 mt-4">Konfirmasi Hapus</h3>
                <div class="mt-2 px-7 py-3">
                    <p class="text-sm text-gray-500">
                        Apakah Anda yakin ingin menghapus akun ini? Tindakan ini tidak dapat dibatalkan.
                    </p>
                </div>
                <div class="flex justify-center gap-4 mt-4">
                    <button id="delete-confirm" class="px-4 py-2 bg-red-600 text-white text-base font-medium rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-300">
                        Hapus
                    </button>
                    <button id="delete-cancel" class="px-4 py-2 bg-gray-100 text-gray-700 text-base font-medium rounded-lg hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-300">
                        Batal
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Floating Add Button -->
    <div class="fixed bottom-6 right-6">
        <a class="p-4 inline-flex justify-center items-center gap-2 rounded-full bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2" href="tambahakun">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
        </a>
    </div>

    <script>
let currentDeleteId = null;

function toggleDropdown(dropdownId) {
    // Close all dropdowns first
    document.querySelectorAll('[id^="dropdown-"]').forEach(dropdown => {
        if (dropdown.id !== dropdownId) {
            dropdown.classList.add('hidden');
        }
    });
    
    // Toggle the clicked dropdown
    const dropdown = document.getElementById(dropdownId);
    if (dropdown) {
        dropdown.classList.toggle('hidden');
    }
}

function showDeleteModal(id) {
    currentDeleteId = id;
    const modal = document.getElementById('delete-modal');
    modal.classList.remove('hidden');
    // Close any open dropdowns
    document.querySelectorAll('[id^="dropdown-"]').forEach(dropdown => {
        dropdown.classList.add('hidden');
    });
}

// Add click event listener to document to close dropdowns when clicking outside
document.addEventListener('click', function(e) {
    if (!e.target.closest('button') && !e.target.closest('[id^="dropdown-"]')) {
        document.querySelectorAll('[id^="dropdown-"]').forEach(dropdown => {
            dropdown.classList.add('hidden');
        });
    }
});

document.addEventListener('DOMContentLoaded', () => {
    const deleteModal = document.getElementById('delete-modal');
    const deleteConfirm = document.getElementById('delete-confirm');
    const deleteCancel = document.getElementById('delete-cancel');

    // Handle delete confirmation
    deleteConfirm.addEventListener('click', () => {
        if (currentDeleteId) {
            console.log(`Deleting account ${currentDeleteId}`);
            
            // Cari grid item berdasarkan nomor akun yang sesuai
            const accountText = document.evaluate(
                `//h3[text()="${currentDeleteId}"]`,
                document,
                null,
                XPathResult.FIRST_ORDERED_NODE_TYPE,
                null
            ).singleNodeValue;

            if (accountText) {
                // Temukan parent element yang merupakan grid item
                const gridItem = accountText.closest('.group');
                if (gridItem) {
                    gridItem.remove();
                    console.log('Grid item berhasil dihapus');
                }
            }
        }
        deleteModal.classList.add('hidden');
        currentDeleteId = null;
    });

    // Hide modal when cancel is clicked
    deleteCancel.addEventListener('click', () => {
        deleteModal.classList.add('hidden');
        currentDeleteId = null;
    });

    // Close modal when clicking outside
    window.addEventListener('click', (e) => {
        if (e.target === deleteModal) {
            deleteModal.classList.add('hidden');
            currentDeleteId = null;
        }
    });
});
</script>